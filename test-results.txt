 FAIL  tests/dummy.test.js
  It validate the ISBN-13 codes
    ✕ given a ISBN of 9780470059029 then is identified as valid (1 ms)
    ✕ given a numeric input when passed to the validation then we get an invalid input error (15 ms)
    ✕ given a string input with a length less than 13 is passed to the validation then we get an invalid input error (2 ms)
    ✕ given input string of length 13 with letters when pass the validation then we get an invalid input error (2 ms)

  ● It validate the ISBN-13 codes › given a ISBN of 9780470059029 then is identified as valid

    ReferenceError: Regexp is not defined

      1 | const validateInput = (input) => {
    > 2 |   regexp = new Regexp('/[0-9]/', 'g');
        |   ^
      3 |   if (typeof input !== 'string' || input.length < 13 || regexp.test(input)) {
      4 |     throw new Error('Invalid input');
      5 |   }

      at validateInput (src/isbn.js:2:3)
      at validateIsbn (src/isbn.js:9:3)
      at Object.<anonymous> (tests/dummy.test.js:8:12)

  ● It validate the ISBN-13 codes › given a numeric input when passed to the validation then we get an invalid input error

    expect(received).toThrow(expected)

    Expected substring: "Invalid input"
    Received message:   "Regexp is not defined"

          1 | const validateInput = (input) => {
        > 2 |   regexp = new Regexp('/[0-9]/', 'g');
            |   ^
          3 |   if (typeof input !== 'string' || input.length < 13 || regexp.test(input)) {
          4 |     throw new Error('Invalid input');
          5 |   }

          at validateInput (src/isbn.js:2:3)
          at validateIsbn (src/isbn.js:9:3)
          at tests/dummy.test.js:12:18
          at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
          at Object.toThrow (node_modules/expect/build/index.js:382:21)
          at Object.<anonymous> (tests/dummy.test.js:12:47)

      10 |
      11 |   it('given a numeric input when passed to the validation then we get an invalid input error', () => {
    > 12 |     expect(() => validateIsbn(9780470059029)).toThrow('Invalid input');
         |                                               ^
      13 |   });
      14 |
      15 |   it('given a string input with a length less than 13 is passed to the validation then we get an invalid input error', () => {

      at Object.<anonymous> (tests/dummy.test.js:12:47)

  ● It validate the ISBN-13 codes › given a string input with a length less than 13 is passed to the validation then we get an invalid input error

    expect(received).toThrow(expected)

    Expected substring: "Invalid input"
    Received message:   "Regexp is not defined"

          1 | const validateInput = (input) => {
        > 2 |   regexp = new Regexp('/[0-9]/', 'g');
            |   ^
          3 |   if (typeof input !== 'string' || input.length < 13 || regexp.test(input)) {
          4 |     throw new Error('Invalid input');
          5 |   }

          at validateInput (src/isbn.js:2:3)
          at validateIsbn (src/isbn.js:9:3)
          at tests/dummy.test.js:16:18
          at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
          at Object.toThrow (node_modules/expect/build/index.js:382:21)
          at Object.<anonymous> (tests/dummy.test.js:16:46)

      14 |
      15 |   it('given a string input with a length less than 13 is passed to the validation then we get an invalid input error', () => {
    > 16 |     expect(() => validateIsbn('9780470059')).toThrow('Invalid input');
         |                                              ^
      17 |   });
      18 |
      19 |   it('given input string of length 13 with letters when pass the validation then we get an invalid input error', () => {

      at Object.<anonymous> (tests/dummy.test.js:16:46)

  ● It validate the ISBN-13 codes › given input string of length 13 with letters when pass the validation then we get an invalid input error

    expect(received).toThrow(expected)

    Expected substring: "Invalid input"
    Received message:   "Regexp is not defined"

          1 | const validateInput = (input) => {
        > 2 |   regexp = new Regexp('/[0-9]/', 'g');
            |   ^
          3 |   if (typeof input !== 'string' || input.length < 13 || regexp.test(input)) {
          4 |     throw new Error('Invalid input');
          5 |   }

          at validateInput (src/isbn.js:2:3)
          at validateIsbn (src/isbn.js:9:3)
          at tests/dummy.test.js:20:18
          at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
          at Object.toThrow (node_modules/expect/build/index.js:382:21)
          at Object.<anonymous> (tests/dummy.test.js:20:49)

      18 |
      19 |   it('given input string of length 13 with letters when pass the validation then we get an invalid input error', () => {
    > 20 |     expect(() => validateIsbn('9780470059ABC')).toThrow('Invalid input');
         |                                                 ^
      21 |   });
      22 | });
      23 |

      at Object.<anonymous> (tests/dummy.test.js:20:49)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 4 total
Snapshots:   0 total
Time:        0.495 s, estimated 1 s
Ran all test suites.
Test results written to: test-results.json
